<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http auto-config="true" use-expressions="true">
    <!--<http access-denied-page="/error403.jsp">-->
        <intercept-url pattern="/documents*" access="@Secure.isAdmin()"/>
        <intercept-url pattern="/admin*" access="@Secure.isAdmin()"/>
        <intercept-url pattern="/cabinet*" access="isAuthenticated()"/>
        <intercept-url pattern="/register*" access="isAnonymous()"/>

        <form-login login-processing-url="/static/j_spring_security_check" login-page="/" authentication-failure-handler-ref="authenticationFailureHandler"
                    default-target-url="/" always-use-default-target="false" authentication-success-handler-ref="authenticationSuccessHandler"/>
        <logout logout-url="/static/j_spring_security_logout" logout-success-url="/"/>
        <http-basic />
        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS"/>
        <remember-me token-validity-seconds="2419200" />

    </http>

    <jdbc-user-service id="userService"
                       data-source-ref="dataSource"
                       users-by-username-query=
                               "select email as username, password, active from user where email=?"
                       authorities-by-username-query=
                               "SELECT user.email as username, permissions.name
                                FROM permissions
                                inner join role_permissions on role_permissions.permission_id=permissions.id
                                inner join user on user.role_id=role_permissions.role_id
                                where user.email=?;" />



    <beans:bean name="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="useReferer" value="true" />
    </beans:bean>

    <beans:bean name="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="useForward" value="true" />
        <beans:property name="defaultFailureUrl" value="/login/error"/>
    </beans:bean>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
            <password-encoder hash="md5"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

</beans:beans>